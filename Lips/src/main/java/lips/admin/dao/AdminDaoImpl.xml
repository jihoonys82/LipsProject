<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="lips.admin.dao.AdminDao">

 	<select id="selUserInfo" resultType="lips.userinfo.dto.User" parameterType="lips.utils.Paging">
	 	SELECT * FROM
	 		(SELECT rownum rnum, U.* FROM
	 			(SELECT * FROM USERINFO ORDER BY USERID) U ORDER BY rnum)
	 		WHERE rnum 
	 		BETWEEN #{startNo} AND #{endNo}
 	</select>
 	
 	<select id="selIsLeader" resultType="int" parameterType="lips.userinfo.dto.User">
 		SELECT count(*) FROM userinfo ui, projectinfo pi
		WHERE pi.projectLeader = ui.userid AND userid = #{userId}
 	</select>
  
 	<select id="selUTotalCnt" resultType="int">
 		SELECT COUNT(*) FROM USERINFO
 	</select>
 	
	<select id="selNewUCnt" resultType="int">
		SELECT COUNT(*) FROM USERINFO WHERE CREATEDATE > SYSDATE-30
	</select> 	
 
	<select id="selClosedUCnt" resultType="int">
		SELECT COUNT(*) FROM USERINFO WHERE BLOCKED=0 AND USERLEVEL=0
	</select> 
 	
	<select id="selPCreaterCnt" resultType="int">
		SELECT COUNT(PROJECTCREATER) FROM PROJECTINFO
	</select>
	
	<select id="selUserByUid" resultType="lips.userinfo.dto.User" parameterType="lips.userinfo.dto.User">
		SELECT * FROM USERINFO WHERE USERID= #{userId}
	</select>
	
	<select id="selProByPid" resultType="lips.project.dto.ProjectDto" parameterType="lips.project.dto.ProjectDto">
		SELECT * FROM PROJECTINFO WHERE PROJECTID= #{projectId}
	</select>
	
	<select id="selPTotalCnt" resultType="int">
 		SELECT COUNT(*) FROM PROJECTINFO
 	</select>
 	
 	 <select id="selProInfo" resultType="lips.project.dto.ProjectDto" parameterType="lips.utils.Paging">
	 	SELECT * FROM
	 		(SELECT rownum rnum, P.* FROM
	 			(SELECT * FROM PROJECTINFO ORDER BY PROJECTID DESC) P ORDER BY rnum)
	 		WHERE rnum 
	 		BETWEEN #{startNo} AND #{endNo} 
 	</select>
	
	<select id="selProByUid" parameterType="lips.userinfo.dto.User" resultType="lips.project.dto.ProjectDto">
		SELECT pi.projectName
			FROM project_member pm, projectinfo pi
		WHERE pm.projectId = pi.projectId AND userId= #{userId}
	</select>
	
	<update id="upUserAccClose" parameterType="lips.userinfo.dto.User">
		UPDATE USERINFO SET USERLEVEL = 0, BLOCKED = 1 WHERE USERID=#{userId}
	</update>
	
	<update id="upUserAccReopen" parameterType="lips.userinfo.dto.User">
		UPDATE USERINFO SET USERLEVEL = 1, BLOCKED = 0 WHERE USERID=#{userId}		
	</update>
	
	<update id="upProRestart" parameterType="lips.project.dto.ProjectDto">
		UPDATE PROJECTINFO SET STATUS = 'OPEN' WHERE PROJECTID = #{projectId}
	</update>
	
	<update id="upProStop" parameterType="lips.project.dto.ProjectDto">
		UPDATE PROJECTINFO SET STATUS = 'PENDING' WHERE PROJECTID = #{projectId}
	</update>
	
	<update id="upProFinish" parameterType="lips.project.dto.ProjectDto">
		UPDATE PROJECTINFO SET STATUS = 'CLOSE' WHERE STATUS = 'PENDING' AND PROJECTID = #{projectId}	
	</update>
	
	<update id="upPCloseDate" parameterType="lips.project.dto.ProjectDto">
		UPDATE PROJECTINFO SET CLOSEDATE = sysdate WHERE PROJECTID = #{projectId}
	</update>
	
	<select id="selNewPCnt" resultType="int">
		SELECT COUNT(*) FROM PROJECTINFO WHERE CREATEDATE > SYSDATE-30
	</select>
	
	<select id="selClosePCnt" resultType="int">
		SELECT COUNT(*) FROM PROJECTINFO WHERE STATUS = 'CLOSE'
	</select>
	
	<select id="selOpenPCnt" resultType="int">
		SELECT COUNT(*) FROM PROJECTINFO WHERE STATUS = 'OPEN'	
	</select>
	
	<select id="selUCntOnP" resultType="int" parameterType="lips.project.dto.ProjectDto">
		SELECT COUNT(pm.userId) FROM project_member pm, projectinfo pi WHERE pm.projectId = pi.projectId AND pi.projectId = #{projectId}
	</select>
	
	<select id="selUOnP" parameterType="lips.project.dto.ProjectDto" resultType="lips.project.dto.ProjectDto">
		SELECT pm.userId FROM project_member pm, projectinfo pi WHERE pm.projectId = pi.projectId AND pi.projectId = #{projectId}
	</select>

	<select id="selIssCntOnP" resultType="int" parameterType="lips.project.dto.ProjectDto">
		SELECT COUNT(iss.issueId) FROM issue iss, projectinfo pi WHERE iss.issueId = pi.projectId AND pi.projectId = #{projectId}
	</select>

	<select id="selElapsedTime" resultType="java.util.HashMap" parameterType="lips.project.dto.ProjectDto">
		SELECT TRUNC(MONTHS_BETWEEN (SYSDATE, createDate)/12) "년",
			TRUNC(MONTHS_BETWEEN (SYSDATE, createDate) -
			TRUNC(MONTHS_BETWEEN(SYSDATE, createDate)/12)*12) "개월",
			TRUNC((MONTHS_BETWEEN (SYSDATE, createDate) -
			TRUNC(MONTHS_BETWEEN(SYSDATE, createDate))) * 30.5) "일"
		FROM PROJECTINFO WHERE PROJECTID = #{projectId}
	</select>
	
	<select id="selUCntOnOpenP" resultType="int">
		SELECT COUNT(DISTINCT(pm.userId)) FROM project_member pm, projectinfo pi WHERE pm.projectId = pi.projectId AND pi.status = 'OPEN'
	</select>
	
	<select id="selNInfo" resultType="lips.admin.dto.NoticeDto">
		SELECT * FROM NOTICE ORDER BY noticeId DESC
	</select>
	
	<insert id="inOneLineNotice" parameterType="String">
		INSERT INTO notice (noticeid, noticeContent, createDate, noticeCategory) VALUES 
    		(NOTICE_SEQ.nextval, #{content}, sysdate, 1)
	</insert>
	
	<insert id="inTimeLineNotice" parameterType="lips.admin.dto.NoticeDto">
		INSERT INTO notice (noticeid, noticeTitle, noticeContent, createDate, noticeCategory) VALUES 
		    (NOTICE_SEQ.nextval, #{noticeTitle}, #{noticeContent}, sysdate, 0)
	</insert>
	
	<select id="selOneLineHeader" resultType="lips.admin.dto.NoticeDto">
		select * from notice where noticeid =( select max(noticeid) from notice where noticeCategory = 1 or noticeCategory = 4)
	</select>
	
	<insert id="inNoticeToLeader" parameterType="lips.admin.dto.NoticeDto">
		INSERT INTO notice (noticeid, noticeTitle, noticeContent, createDate, noticeCategory) VALUES 
		    (NOTICE_SEQ.nextval, #{noticeTitle}, #{noticeContent}, sysdate, 2)
	</insert>
	
	<insert id="inNoticeToStop" parameterType="lips.admin.dto.NoticeDto">
		INSERT INTO notice (noticeid, noticeTitle, noticeContent, createDate, noticeCategory) VALUES 
		    (NOTICE_SEQ.nextval, #{noticeTitle}, #{noticeContent}, sysdate, 3)
	</insert>
	
	<update id="upOneLineHeader">
		UPDATE NOTICE SET NOTICECATEGORY = 4 WHERE NOTICEID =( SELECT MAX(NOTICEID) FROM NOTICE WHERE NOTICECATEGORY = 1)	
	</update>
	
	<select id="selMoreOneLineN" resultType="lips.admin.dto.NoticeDto">
		SELECT * FROM NOTICE WHERE NOTICECATEGORY = 1 OR NOTICECATEGORY = 4 ORDER BY noticeId DESC
	</select>
	
	<select id="selNewUByMonth" resultType="java.util.HashMap">
		SELECT * FROM (SELECT COUNT(*) AS NEWUSER, TO_CHAR(CREATEDATE, 'YY-MM') AS QUARTER FROM USERINFO GROUP BY TO_CHAR(CREATEDATE, 'YY-MM')) order By QUARTER
	</select>
	
	<select id="selNewPByMonth" resultType="java.util.HashMap">
		SELECT * FROM (SELECT COUNT(*) AS NEWPROJECT, TO_CHAR(CREATEDATE, 'YY-MM') AS QUARTER FROM PROJECTINFO GROUP BY TO_CHAR(CREATEDATE, 'YY-MM')) order By QUARTER
	</select>
	
	<select id="selClosedPByMonth" resultType="java.util.HashMap">
		SELECT * FROM (SELECT COUNT(*) AS CLOSEPROJECT, TO_CHAR(CLOSEDATE, 'YY-MM') AS QUARTER FROM PROJECTINFO WHERE STATUS = 'CLOSE'
			GROUP BY TO_CHAR(CLOSEDATE, 'YY-MM')) order By QUARTER	
	</select>
	
	<select id="selOverduePByMonth" resultType="java.util.HashMap">
		SELECT * FROM (SELECT COUNT(*) AS OVERDUEPROJECT, TO_CHAR(CLOSEDATE, 'YY-MM') AS QUARTER FROM PROJECTINFO WHERE STATUS = 'OPEN' AND 
			SYSDATE > CLOSEDATE GROUP BY TO_CHAR(CLOSEDATE, 'YY-MM')) order By QUARTER
	</select>
	
 </mapper>  