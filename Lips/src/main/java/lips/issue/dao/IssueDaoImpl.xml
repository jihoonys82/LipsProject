<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="lips.issue.dao.IssueDao">
 	<select id="selIssueByDealine" parameterType="lips.userinfo.dto.User" resultType="lips.issue.dto.IssueDto">
 		SELECT * FROM issue 
 		WHERE assignee=#{userId} AND ROWNUM=1 
 		ORDER BY expectedEndDate
 	</select>
 	
 	<select id="selIssueByFollower" parameterType="lips.userinfo.dto.User" resultType="lips.issue.dto.IssueDto">
 		SELECT T.* 
		FROM 
		    (SELECT A.*, B.Watcher
		        FROM issue A, 
		            (SELECT issueid, COUNT(userId) Watcher 
		                FROM issue_watcher 
		                GROUP BY issueId 
		                ORDER BY Watcher DESC
		            ) B
		        WHERE A.issueId = B.issueId 
		            AND A.assignee=#{userId}
		        ORDER BY B.Watcher DESC
		    ) T
		WHERE ROWNUM=1
 	</select>
 	
 	<select id="selIssueByAssignee" parameterType="lips.userinfo.dto.User" resultType="lips.issue.dto.IssueDto">
 		SELECT * FROM issue
		WHERE assignee = #{userId}
		ORDER BY issueStage, expectedEndDate, createDate
 	</select>
 	
 	<select id="selIssueByFollowing" parameterType="lips.userinfo.dto.User" resultType="lips.issue.dto.IssueDto">
 		SELECT *
		FROM issue 
		WHERE issueId IN (
		    SELECT issueId FROM issue_watcher WHERE userId=#{userId}
		)
 	</select>
 	
 	<select id="selIssueWatcherCount" parameterType="lips.issue.dto.IssueDto" resultType="int">
 		SELECT COUNT(*) FROM issue_watcher
 		WHERE issueId=#{issueId}
 	</select>
 	
 	<select id="selIssueCommentCount" parameterType="lips.issue.dto.IssueDto" resultType="int">
 		SELECT COUNT(*) FROM issue_comment 
 		WHERE issueId=#{issueId}
 	</select>
 	<select id="selCatByProjId" parameterType="lips.project.dto.ProjectDto" resultType="lips.issue.dto.CategoryAssetDto">
 		SELECT C.categoryAssetId, C.assetName, C.assetCode, C.assetDescription
		FROM category_asset C, issue_category I
		WHERE C.categoryAssetId = I.categoryAssetId AND projectId=#{projectId}
		ORDER BY I.categoryOrder ASC
 	</select>
 	
 	<select id="selUserByName" parameterType="map" resultType="lips.userinfo.dto.User">
 		SELECT ui.userId, ui.email, ui.createdate, ui.nick, ui.blocked, ui.userlevel, ui.phone, ui.birth 
 		FROM project_member pm, userinfo ui
		WHERE pm.userId = ui.userId
			AND pm.projectId=#{projectId}
			AND pm.userID LIKE '%'||#{name}||'%'
 	</select>
 	
 	<select id="selIssueStagePreset" resultType="lips.issue.dto.IssueStagePresetDto">
 		SELECT issuePresetId, presetName, userId 
 		FROM issue_stage_preset
 	</select>
 	
 	<select id="selStageAssetByPresetId" parameterType="lips.issue.dto.IssueStagePresetDto" resultType="lips.issue.dto.StageAssetDto">
 		SELECT A.stageassetId, A.stageName, A.assetDescription
	    FROM issue_stage_preset_asset P, stage_asset A 
	    WHERE P.stageassetId = A.stageassetId
	    	AND P.issuePresetId = #{issuePresetId}
	    ORDER BY P.assetOrder ASC
 	</select>
 	
 	<insert id="inIssue" parameterType='lips.issue.dto.IssueDto'>
 		INSERT INTO issue
		    (issueId, projectId, issueTitle, categoryId, createUser, assignee, expectedEndDate, issueContent, customValues, stagePresetId)
		VALUES 
		    (ISSUE_SEQ.nextval, #{projectId}, #{issueTitle}, #{categoryId}, #{createUser}, #{assignee}, #{expectedEndDate}, #{issueContent}, #{customValues}, #{stagePresetId})
 	</insert>
 	
 	<select id="selIssueByProject" parameterType="lips.project.dto.ProjectDto" resultType="lips.issue.dto.IssueDto">
 		SELECT * FROM issue
		WHERE projectId = #{projectId}
		ORDER BY issueStage, expectedEndDate, createDate
 	</select>
 	
 	<select id="selStageAsset" resultType="lips.issue.dto.StageAssetDto">
 		SELECT * FROM stage_asset
 	</select>
 </mapper>  