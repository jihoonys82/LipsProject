<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="lips.issue.dao.IssueDao">
 	<select id="selIssueByDealine" parameterType="lips.userinfo.dto.User" resultType="lips.issue.dto.IssueDto">
 		SELECT * FROM issue 
 		WHERE assignee=#{userId} AND ROWNUM=1 
 		ORDER BY expectedEndDate
 	</select>
 	
 	<select id="selIssueByFollower" parameterType="lips.userinfo.dto.User" resultType="lips.issue.dto.IssueDto">
 		SELECT T.* 
		FROM 
		    (SELECT A.*, B.Watcher
		        FROM issue A, 
		            (SELECT issueid, COUNT(userId) Watcher 
		                FROM issue_watcher 
		                GROUP BY issueId 
		                ORDER BY Watcher DESC
		            ) B
		        WHERE A.issueId = B.issueId 
		            AND A.assignee=#{userId}
		        ORDER BY B.Watcher DESC
		    ) T
		WHERE ROWNUM=1
 	</select>
 	
 	<select id="selIssueByAssignee" parameterType="lips.userinfo.dto.User" resultType="lips.issue.dto.IssueDto">
 		SELECT * FROM issue
		WHERE assignee = #{userId}
		ORDER BY issueStage, expectedEndDate, createDate
 	</select>
 	
 	<select id="selIssueByFollowing" parameterType="lips.userinfo.dto.User" resultType="lips.issue.dto.IssueDto">
 		SELECT *
		FROM issue 
		WHERE issueId IN (
		    SELECT issueId FROM issue_watcher WHERE userId=#{userId}
		)
 	</select>

 	<select id="selIssueWatcherCount" parameterType="lips.issue.dto.IssueDto" resultType="int">
 		SELECT COUNT(*) FROM issue_watcher
 		WHERE issueId=#{issueId}
 	</select>
 	
 	<select id="selIssueCommentCount" parameterType="lips.issue.dto.IssueDto" resultType="int">
 		SELECT COUNT(*) FROM issue_comment 
 		WHERE issueId=#{issueId}
 	</select>
 	<select id="selCatByProjId" parameterType="lips.project.dto.ProjectDto" resultType="lips.issue.dto.CategoryAssetDto">
 		SELECT C.categoryAssetId, C.assetName, C.assetCode, C.assetDescription
		FROM category_asset C, issue_category I
		WHERE C.categoryAssetId = I.categoryAssetId AND projectId=#{projectId}
		ORDER BY I.categoryOrder ASC
 	</select>
 	
 	<select id="selUserByName" parameterType="map" resultType="lips.userinfo.dto.User">
 		SELECT ui.userId, ui.email, ui.createdate, ui.nick, ui.blocked, ui.userlevel, ui.phone, ui.birth 
 		FROM project_member pm, userinfo ui
		WHERE pm.userId = ui.userId
			AND pm.projectId=#{projectId}
			AND pm.userID LIKE '%'||#{name}||'%'
 	</select>
 	
 	<select id="selIssueStagePreset" parameterType="lips.project.dto.ProjectDto" resultType="lips.issue.dto.IssueStagePresetDto">
 		SELECT issuePresetId, presetName, userId, projectId 
 		FROM issue_stage_preset
 		WHERE projectId = #{projectId} or projectId = 0
 	</select>
 	
 	<select id="selStageAssetByPresetId" parameterType="lips.issue.dto.IssueStagePresetDto" resultType="lips.issue.dto.StageAssetDto">
 		SELECT A.stageassetId, A.stageName, A.assetDescription 
	    FROM issue_stage_preset_asset P, stage_asset A 
	    WHERE P.stageassetId = A.stageassetId
	    	AND P.issuePresetId = #{issuePresetId}
	    ORDER BY P.assetOrder ASC
 	</select>
 	<select id="selProjectName" parameterType="lips.issue.dto.IssueDto" resultType="String">
 		SELECT PROJECTNAME FROM Projectinfo where projectId=#{projectId }
 	</select>
 	<insert id="inIssue" parameterType='lips.issue.dto.IssueDto'>
 		INSERT INTO issue
		    (issueId, projectId, issueTitle, categoryId, createUser, assignee, expectedEndDate, issueContent, customValues, stagePresetId)
		VALUES 
		    (ISSUE_SEQ.nextval, #{projectId}, #{issueTitle}, #{categoryId}, #{createUser}, #{assignee}, #{expectedEndDate}, #{issueContent}, #{customValues}, #{stagePresetId})
		<selectKey keyProperty="issueId" resultType="int" order="AFTER">
			SELECT ISSUE_SEQ.CURRVAL FROM dual
		</selectKey>
 	</insert>
 	
 	<select id="selIssueByProject" parameterType="lips.project.dto.ProjectDto" resultType="lips.issue.dto.IssueDto">
 		SELECT * FROM issue
		WHERE projectId = #{projectId}
		ORDER BY issueStage, expectedEndDate, createDate
 	</select>

 	
 	<select id="selTotalCountByIssueFollowing" parameterType="lips.userinfo.dto.User" resultType="int">
 		SELECT COUNT(*)
		FROM issue 
		WHERE issueId IN (
		    SELECT issueId FROM issue_watcher WHERE userId=#{userId}
		)
 	</select>
 	
 	<select id="selIssueByFollowingPaging" parameterType="map" resultType="lips.issue.dto.IssueDto">
 		SELECT * FROM (
 			SELECT *
			FROM issue 
			WHERE issueId IN (
		    	SELECT issueId FROM issue_watcher WHERE userId=#{userId}
			)
			ORDER BY ROWNUM
		) WHERE ROWNUM BETWEEN ${startNo} AND ${endNo}
 	</select>
 	
 	<select id="selTotalCountByAssignee" parameterType="lips.userinfo.dto.User" resultType="int">
 		SELECT COUNT(*) FROM issue
		WHERE assignee = #{userId}
 	</select>
 	
 	<select id="selIssueByAssgineePaging" parameterType="map" resultType="lips.issue.dto.IssueDto">
 		SELECT I.* 
 		FROM (
 			SELECT * 
            FROM issue
            WHERE assignee = #{userId} 
			ORDER BY issueStage, expectedEndDate, createDate
		) I
		WHERE ROWNUM BETWEEN ${startNo} and ${endNo}
 	</select>
 	
 	<select id="selTotalCountByProject" parameterType="lips.project.dto.ProjectDto" resultType="int">
 		SELECT COUNT(*) FROM issue
		WHERE projectId = #{projectId}
 	</select>
 	
 	<select id="selIssueByProjectPaging" parameterType="map" resultType="lips.issue.dto.IssueDto">
 		SELECT * FROM (
 			SELECT * FROM issue
			WHERE projectId = ${projectId}
			ORDER BY issueStage, expectedEndDate, createDate
		)
		WHERE ROWNUM BETWEEN ${startNo} AND ${endNo}
 	</select>
 	
 	<select id="selCountProjectMember" parameterType="lips.userinfo.dto.User" resultType="int">
 		SELECT COUNT(*)
 		FROM project_member
 		WHERE projectId = ${projectId} AND userId = #{userId} AND userId > 0
 	</select>
 	 
 	<select id="selIssueByIssueId" parameterType="lips.issue.dto.IssueDto" resultType="lips.issue.dto.IssueDto">
 		SELECT * FROM issue WHERE issueId= #{issueId}
 	</select>
 	
 	<select id="selCountIssueFollowingByIssue" parameterType="lips.issue.dto.IssueDto" resultType="int">
 		SELECT COUNT(*) FROM issue_watcher WHERE issueId = #{issueId}
 	</select>
 	
 	<select id="selFollowerByIssue" parameterType="lips.issue.dto.IssueDto" resultType="lips.userinfo.dto.User">
 		SELECT userId FROM issue_watcher WHERE issueId = #{issueId}
 	</select>
 	
 	<select id="selCommentByIssue" parameterType="lips.issue.dto.IssueDto" resultType="lips.issue.dto.IssueCommentDto">
 		SELECT * FROM issue_comment WHERE issueId = #{issueId} ORDER BY createDate ASC
 	</select>
 	
 	<select id="selCountParticipatedByUser" parameterType="lips.userinfo.dto.User" resultType="int">
 		SELECT COUNT(*) FROM project_member WHERE userId=#{userId}
 	</select>
 	
 	<update id="upIssueAssignee" parameterType="map">
 		UPDATE issue SET assignee = #{userId} WHERE issueId = ${issueId}
 	</update>
 	
 	<delete id="delComment" parameterType="lips.issue.dto.IssueCommentDto">
 		DELETE issue_comment WHERE commentId = #{commentId}
 	</delete>
 	<insert id="inComment" parameterType="lips.issue.dto.IssueCommentDto">
		<selectKey keyProperty="commentId" resultType="int" order="BEFORE">
			SELECT issue_comment_SEQ.NEXTVAL FROM dual
		</selectKey>
 		INSERT INTO issue_comment(commentId, issueId, userId, commentContent, attachFile) 
 		VALUES (issue_comment_SEQ.CURRVAL, #{issueId}, #{userId}, #{commentContent}, #{attachFile}) 
 	</insert>
 	
 	<select id="selCommentById" parameterType="lips.issue.dto.IssueCommentDto" resultType="lips.issue.dto.IssueCommentDto">
 		SELECT * FROM issue_comment WHERE commentId = #{commentId}
 	</select>
 	
 	<insert id="inStageAsset" parameterType="lips.issue.dto.StageAssetDto">
 		INSERT INTO stage_asset VALUES (STAGE_ASSET_SEQ.nextVal,#{stageName }, #{assetDescription}, #{projectId})
 	</insert>
 	<select id="selStageAsset" parameterType="Integer" resultType="lips.issue.dto.StageAssetDto">	
 		SELECT * FROM stage_asset where projectId = #{value } or projectId = 0 order by stageAssetId
 	</select>
 	<select id="selStagePreset" parameterType="Integer" resultType="lips.issue.dto.IssueStagePresetDto">
 		SELECT * FROM Issue_stage_preset where projectId = #{value } or projectId = 0 order by issuePresetId
 	</select>
 	<insert id="inStagePreset" parameterType="lips.issue.dto.IssueStagePresetDto">
 		INSERT INTO Issue_stage_preset VALUES(ISSUE_STAGE_PRESET_SEQ.nextVal,#{presetName }, #{userId}, #{projectId})
 	</insert>
 	<insert id="inStagePresetAsset" parameterType="map">
 		<selectKey resultType="Integer" keyProperty="targetPreset" order="BEFORE">
 			  SELECT MAX(ISSUEPRESETID) FROM Issue_stage_preset  
 		</selectKey>
 		INSERT ALL
 		<foreach collection="assetList" item="assetId" index="index">
 			 INTO Issue_stage_preset_asset VALUES (#{targetPreset}, #{assetId }, #{index })
 		</foreach>
 		SELECT * FROM dual
 	</insert>
 	<delete id="delStagePresetAsset" parameterType="Integer">
 		delete from Issue_stage_preset_asset where issuePresetId = #{value }
 	</delete>
 	<update id="upStagePreset" parameterType="lips.issue.dto.IssueStagePresetDto">
 		update Issue_stage_preset set presetName=#{presetName},userId=#{userId} where issuePresetId = #{issuePresetId}
 	</update>
 	<insert id="inModifyPreset" parameterType="map">
 		INSERT ALL  
 		<foreach collection="assetList" item="assetId" index="index">
 			 INTO Issue_stage_preset_asset VALUES (#{issuePresetId.value}, #{assetId }, #{index })
 		</foreach>
 		SELECT * from dual
 	</insert>
 	<delete id="delPreset" parameterType="Integer">
 		DELETE from Issue_stage_preset where issuePresetId = #{value }  
 	</delete>
  	<delete id="delStageAsset" parameterType="lips.issue.dto.StageAssetDto">
  		DELETE from stage_asset where stageAssetId=#{stageAssetId } and projectId != 0
  	</delete>
  	<select id="selAssetOrder" parameterType="lips.issue.dto.IssueStagePresetAssetDto" resultType="Integer">
  		Select assetOrder from issue_stage_preset_asset where issuePresetid = #{issuePresetId } And stageAssetId=#{stageAssetId }
  	</select>
  	<select id="selStageAssetPressetUpStageId" parameterType="lips.issue.dto.IssueStagePresetAssetDto" resultType="lips.issue.dto.IssueStagePresetAssetDto">
	  	SELECT * FROM
	  		(SELECT stageassetid 
	  		FROM issue_stage_preset_asset
	  		WHERE issuepresetid = #{issuePresetId} 
	  		AND assetOrder <![CDATA[>]]> #{assetOrder}
	  		ORDER BY assetorder)
  		WHERE rownum= '1'
  	</select>
  	<select id="selStageAssetPressetDownStageId" parameterType="lips.issue.dto.IssueStagePresetAssetDto" resultType="lips.issue.dto.IssueStagePresetAssetDto">
	  	SELECT *FROM
	  		(SELECT stageassetid 
	  		FROM issue_stage_preset_asset
	  		WHERE issuepresetid = #{issuePresetId} 
	  		AND assetOrder <![CDATA[<]]> #{assetOrder}
	  		ORDER BY assetorder DESC)
  		WHERE rownum= '1'
  	</select>
  	<update id="updateIssueIssueStage" parameterType="lips.issue.dto.IssueDto">
  		UPDATE issue 
		SET issuestage = #{issueStage}
		WHERE issueid = #{issueId}
  	</update>
  	<update id="updateIssueIssueStageEnddate" parameterType="lips.issue.dto.IssueDto" >
  		UPDATE issue 
		SET issuestage = #{issueStage} ,actualenddate = SYSDATE
		WHERE issueid = #{issueId}
  	</update>
  	<select id="selIssueEnddate" parameterType="lips.issue.dto.IssueDto" resultType="lips.issue.dto.IssueDto">
  		SELECT * FROM issue
  		WHERE issueid = #{issueId}
  	</select>
  	<update id="deleteEnddate" parameterType="lips.issue.dto.IssueDto">
  		UPDATE issue 
		SET actualenddate = null
		WHERE issueid = #{issueId}
  	</update>
  	<select id="selStageAssetStageId" parameterType="lips.issue.dto.StageAssetDto" resultType="lips.issue.dto.StageAssetDto">
  		SELECT*FROM stage_asset
		WHERE stageassetid = #{stageAssetId}
  	</select>
  	
  	<insert id="inIssueAttachFile" parameterType="map">
  		INSERT ALL
  			<foreach collection="fileList" item="list" index="index">
  				INTO issue_attachFile(issueId, fileId) VALUES (#{list.issueId}, #{list.fileId})
  			</foreach> 
  		SELECT * FROM dual
  	</insert>
  	
  	<select id="selIssueFile" parameterType="lips.issue.dto.IssueDto" resultType="lips.file.dto.AttachFileDto">
  		SELECT AF.* 
  		FROM issue_attachFile IA, attachFile AF
  		WHERE IA.fileId = AF.fileId
  			AND IA.issueId = #{issueId}
  	</select>
 </mapper>  