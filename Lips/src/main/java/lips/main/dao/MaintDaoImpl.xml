<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="lips.main.dao.MainDao">
 
 	<!-- 나에게 할당된 모든 이슈 종료/활성화 상태 가리지 않음..--> 
 	<select id="selAllocateIssue"  parameterType="lips.userinfo.dto.User" resultType="lips.issue.dto.IssueDto">
	SELECT * FROM ISSUE WHERE ASSIGNEE=#{userId}
	</select>
 
 
 
 
 	<!-- 내가 소속된 모든 프로젝트의 모든 이슈 -->
 	<select id="selAllMyIssue"  parameterType="lips.userinfo.dto.User" resultType="lips.issue.dto.IssueDto">
	SELECT I.*
FROM issue I,
    (SELECT PM.projectId 
    FROM project_member PM, projectinfo PI
    WHERE PM.projectId = PI.projectId
        AND PM.userId = #{userId}
        AND PI.status = 'OPEN'
    ) PID
WHERE I.projectId = PID.projectId
	</select>
 
 
 

 	<!-- Lips의 모든  이슈 가져오기  종료/활성화 가리지 않음..-->
	<select id="selAllIssue" resultType="lips.issue.dto.IssueDto">
	select * from issue
	</select>
 
 	<!-- Lips의 공개/비공개 중 공개(오픈)상태의 모든 프로젝트 가져오기 -->
	<select id="selOpenPro" resultType="lips.project.dto.ProjectDto">
	SELECT * FROM projectinfo WHERE PROJECTOPEN = 1 AND STATUS='OPEN'
	</select>


	<select id="selMyPro" parameterType="lips.userinfo.dto.User" resultType="lips.project.dto.ProjectDto">
 		SELECT * FROM projectinfo pf, project_member pm
	WHERE pf.PROJECTID = pm.PROJECTID AND USERID=#{userId} AND pm.USERLEVEL>=1 And STATUS='OPEN'
 	</select>



 	<!-- Lips의 모든 프로젝트 가져오기(일시정지 및 종료 제외) -->
	<select id="selAllPro" resultType="lips.project.dto.ProjectDto">
	SELECT * FROM projectinfo WHERE STATUS='OPEN'
	</select>
 
 
	 <!-- 타임라인 공지 가져오기  -->
 	<select id="selTimelineInfo" resultType="lips.admin.dto.NoticeDto" >
 		SELECT rownum, a.*
	from(SELECT * FROM notice WHERE noticecategory =0 ORDER BY NOTICEID ASC)a
	where rownum <![CDATA[<]]>6 

 	</select>
 	
 	<!-- 팔로워 많은 이슈 가져오기  -->
 	<select id="selProIfOpen" resultType="lips.project.dto.ProjectDto">
SELECT * FROM
    (SELECT projInf.*, projwatcher.projectwatcher 
    FROM projectInfo projInf,
        (SELECT PI.projectId, SUM(IW.watcher) AS projectWatcher
        FROM projectInfo PI, 
           (SELECT I.issueId, I.projectId, COUNT(W.userId) AS watcher
            FROM issue I, issue_watcher W
            WHERE I.issueId = W.issueId
            GROUP BY I.issueId, I.projectId) IW
        WHERE PI.projectId = IW.projectId
        GROUP BY PI.projectId) projWatcher
    WHERE projInf.projectId = projWatcher.projectId
    ORDER BY projwatcher.projectwatcher DESC) WHERE ROWNUM  <![CDATA[<]]>= 5
 	</select>													<!-- 태그를 열고닫는거랑 혼동 돼요 -->
 

 	
 	
 </mapper>