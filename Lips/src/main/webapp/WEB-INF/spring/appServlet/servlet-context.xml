<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<interceptors>
		<interceptor>
			<mapping path="/user/login" />
			<beans:bean class="lips.userinfo.interceptor.LoginInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/**" />
			<exclude-mapping path="/resources/**" />
			<exclude-mapping path="/intro"/>
			<exclude-mapping path="/user/login"/>
			<exclude-mapping path="/user/logout"/>
			<beans:bean class="lips.userinfo.interceptor.UserInterceptor" />

		</interceptor>
	</interceptors>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- JSP기반의 ViewResolver : order 2 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<!-- URL 기반의 ViewResolver : order 1 -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:value>/WEB-INF/tiles/template.xml</beans:value>
		</beans:property>
	</beans:bean>
	
	<!-- 자바빈 기반의 ViewResolver : order 0 -->	
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>
	
	<beans:bean id="download" class="lips.view.DownloadView" />
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxInMemorySize" value="1048576" />
		<beans:property name="maxUploadSize" value="10485760" />
		<beans:property name="defaultEncoding" value="utf-8" />
	</beans:bean>
	
	<context:component-scan base-package="com.lips.www,lips" />
	
	
	
</beans:beans>
